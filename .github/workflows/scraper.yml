name: YAM Boat Slot Monitor

on:
  schedule:
    - cron: '*/15 * * * *'  # Run every 15 minutes
  workflow_dispatch:  # Allow manual triggering

jobs:
  monitor_slots:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This gives permission to push to the repository
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install

      - name: Run slot monitor once
        env:
          YAM_USERNAME: ${{ secrets.YAM_USERNAME }}
          YAM_PASSWORD: ${{ secrets.YAM_PASSWORD }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: python -m app.main monitor 14 --once

      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add app/data/all_slots.json app/data/previous_slots.json app/data/notified_slots.json
          
          # Only proceed if there are changes to commit
          if ! git diff --quiet || ! git diff --staged --quiet; then
            git commit -m "Update slot data [skip ci]"
            
            # Stash any unstaged changes before pulling to ensure a clean working directory
            git stash push --keep-index --include-untracked
            
            # Pull with rebase before pushing to handle concurrent updates
            echo "Pulling latest changes from origin..."
            git pull --rebase origin ${GITHUB_REF#refs/heads/} || (
              echo "Rebase failed, attempting merge instead..."
              git stash pop
              git merge origin/${GITHUB_REF#refs/heads/} --no-edit
            )
            
            # Pop the stash if pull/rebase was successful
            # Check if stash exists before popping
            if [ -n "$(git stash list)" ]; then
              git stash pop || echo "Stash pop failed, continuing push..."
            fi
            
            # Push changes
            echo "Pushing changes to origin..."
            git push origin HEAD:${GITHUB_REF}
          fi
